name: Build

on:
  push:
    branches: [ '*' ]


jobs:

  vars:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      app_tag: ${{ steps.vars.outputs.app_tag }}
      ref_slug: ${{ steps.vars.outputs.ref_slug }}
      param_space: ${{ steps.vars.outputs.param_space }}
      app_branch: ${{ steps.vars.outputs.app_branch }}
      github_image: ghcr.io/avtehnik/php-base
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set vars
        id: vars
        run: |
          SHA_SHORT="$(git rev-parse --short HEAD)"
          REF_SLUG="$(echo "${{ github.ref }}" | cut -d'/' -f3- | sed 's/[^a-z0-9_-]/__/g')"
          APP_TAG="$(echo ${REF_SLUG}-${SHA_SHORT}-${{ github.run_number }} | awk '{print tolower($0)}' )"
          echo "::set-output name=app_tag::$APP_TAG"

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ vars ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ needs.vars.outputs.github_image }}/php-7.1
          tags: |
            type=raw,value=${{ needs.vars.outputs.app_tag }}
            type=raw,value=latest

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

#  test-apache:
#    runs-on: ubuntu-latest
#    permissions:
#      packages: read
#    needs: [ vars, build-and-push-image ]
#    services:
#      apache:
#        image: ${{ needs.vars.outputs.github_image }}/php-7.1:${{ needs.vars.outputs.app_tag }}
#        credentials:
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#        ports:
#          - 8080:80
#    steps:
#      - name: Ping Apache
#        run: |
#          curl -fsS http://127.0.0.1:8080/

  all-tests:
    runs-on: ubuntu-latest
    needs: [ build-and-push-image]
    steps:
      - name: Success
        run: |
          exit 0

  create-release:
    if:
      contains('refs/heads/master', github.ref)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [ vars, all-tests ]
    steps:
      - name: Create release
        run: |
          curl -fsS \
            -X POST \
            -H 'acccept: application/vnd.github.v3+json' \
            -H 'authorization: token ${{ secrets.GITHUB_TOKEN }}' \
            -H 'content-type: application/json' \
            "$GITHUB_API_URL/repos/${{ github.repository }}/git/refs" \
            -d '{"ref":"refs/tags/${{ needs.vars.outputs.app_tag }}","sha":"${{ github.sha }}"}'

